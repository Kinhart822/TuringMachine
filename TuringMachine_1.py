class TuringMachine_1:
    def __init__(self, tape, start_position, transitions):
        self.tape = list(tape)
        self.head = start_position
        self.transitions = transitions
        self.state = 0
        self.halted = False

    def step(self):
        if self.halted:
            return
        current_symbol = self.tape[self.head]
        if (self.state, current_symbol) in self.transitions:
            new_symbol, new_state, move = self.transitions[(self.state, current_symbol)]
            self.tape[self.head] = new_symbol
            self.state = new_state
            if move == 'L':
                if self.head == 0:  # Nếu đầu băng, thêm ký tự '_' vào đầu băng
                    self.tape.insert(0, '_')
                else:
                    self.head -= 1
            elif move == 'R':
                self.head += 1
                if self.head == len(self.tape):  # Nếu cuối băng, thêm ký tự '_' vào cuối băng
                    self.tape.append('_')
            if self.state == 'h':
                self.halted = True
        else:
            self.halted = True

    def run(self):
        while not self.halted:
            self.step()
        return ''.join(self.tape).strip('_')

# Define the transitions based on the provided table
transitions = {
    (0, '_'): ('_', 1, 'L'),
    (0, '0'): ('_', 10, 'L'),
    (0, '1'): ('_', 20, 'L'),
    (1, '_'): ('_', 2, 'L'),
    (1, '0'): ('_', 1, 'L'),
    (1, '1'): ('_', 1, 'L'),
    (2, '_'): ('_', 3, 'R'),
    (2, '0'): ('0', 3, 'R'),
    (2, '1'): ('1', 3, 'R'),
    (2, '$'): ('1', 2, 'L'),
    (2, '@'): ('0', 2, 'L'),
    (3, '_'): ('_', 'h', 'L'),
    (3, '0'): ('0', 3, 'R'),
    (3, '1'): ('1', 3, 'R'),
    (10, '_'): ('_', 11, 'L'),
    (10, '@'): ('@', 10, 'L'),
    (10, '$'): ('$', 10, 'L'),
    (10, 'x'): ('x', 10, 'L'),
    (10, 'y'): ('y', 10, 'L'),
    (10, '0'): ('0', 10, 'L'),
    (10, '1'): ('1', 10, 'L'),
    (11, '_'): ('_', 12, 'L'),
    (11, '@'): ('@', 11, 'L'),
    (11, '$'): ('$', 11, 'L'),
    (11, 'x'): ('x', 11, 'L'),
    (11, 'y'): ('y', 11, 'L'),
    (11, '0'): ('0', 11, 'L'),
    (11, '1'): ('1', 11, 'L'),
    (12, '_'): ('@', 15, 'R'),
    (12, '0'): ('@', 15, 'R'),
    (12, '1'): ('$', 15, 'R'),
    (12, '$'): ('$', 12, 'L'),
    (12, '@'): ('@', 12, 'L'),
    (15, '_'): ('_', 16, 'R'),
    (15, '@'): ('@', 15, 'R'),
    (15, '$'): ('$', 15, 'R'),
    (15, 'x'): ('x', 15, 'R'),
    (15, 'y'): ('y', 15, 'R'),
    (15, '0'): ('0', 15, 'R'),
    (15, '1'): ('1', 15, 'R'),
    (16, '_'): ('_', 17, 'R'),
    (16, '@'): ('@', 16, 'R'),
    (16, '$'): ('$', 16, 'R'),
    (16, 'x'): ('x', 16, 'R'),
    (16, 'y'): ('y', 16, 'R'),
    (16, '0'): ('0', 16, 'R'),
    (16, '1'): ('1', 16, 'R'),
    (17, '_'): ('_', 0, 'L'),
    (17, '@'): ('@', 17, 'R'),
    (17, '$'): ('$', 17, 'R'),
    (17, 'x'): ('x', 17, 'R'),
    (17, 'y'): ('y', 17, 'R'),
    (17, '0'): ('0', 17, 'R'),
    (17, '1'): ('1', 17, 'R'),
    (20, '_'): ('_', 21, 'L'),
    (20, '0'): ('0', 20, 'L'),
    (20, '1'): ('1', 20, 'L'),
    (21, '0'): ('x', 22, 'L'),
    (21, '1'): ('y', 26, 'L'),
    (22, '_'): ('_', 23, 'L'),
    (22, '@'): ('@', 22, 'L'),
    (22, '$'): ('$', 22, 'L'),
    (22, 'x'): ('x', 22, 'L'),
    (22, 'y'): ('y', 22, 'L'),
    (22, '0'): ('0', 22, 'L'),
    (22, '1'): ('1', 22, 'L'),
    (23, '_'): ('@', 24, 'R'),
    (23, '0'): ('@', 24, 'R'),
    (23, '1'): ('$', 24, 'R'),
    (23, '@'): ('@', 23, 'L'),
    (23, '$'): ('$', 23, 'L'),
    (23, 'x'): ('x', 23, 'L'),
    (23, 'y'): ('y', 23, 'L'),
    (24, '_'): ('_', 25, 'R'),
    (24, '@'): ('@', 24, 'R'),
    (24, '$'): ('$', 24, 'R'),
    (24, 'x'): ('x', 24, 'R'),
    (24, 'y'): ('y', 24, 'R'),
    (24, '0'): ('0', 24, 'R'),
    (24, '1'): ('1', 24, 'R'),
    (25, 'x'): ('x', 30, 'L'),
    (25, 'y'): ('y', 30, 'L'),
    (25, '_'): ('_', 25, 'R'),
    (25, '@'): ('@', 25, 'R'),
    (25, '$'): ('$', 25, 'R'),
    (25, '0'): ('0', 25, 'R'),
    (25, '1'): ('1', 25, 'R'),
    (26, '_'): ('_', 27, 'L'),
    (26, '@'): ('@', 26, 'L'),
    (26, '$'): ('$', 26, 'L'),
    (26, 'x'): ('x', 26, 'L'),
    (26, 'y'): ('y', 26, 'L'),
    (26, '0'): ('0', 26, 'L'),
    (26, '1'): ('1', 26, 'L'),
    (27, '_'): ('$', 24, 'R'),
    (27, '0'): ('$', 24, 'R'),
    (27, '1'): ('@', 28, 'L'),
    (27, '@'): ('@', 27, 'L'),
    (27, '$'): ('$', 27, 'L'),
    (27, 'x'): ('x', 27, 'L'),
    (27, 'y'): ('y', 27, 'L'),
    (28, '_'): ('1', 24, 'R'),
    (28, '0'): ('1', 24, 'R'),
    (28, '1'): ('0', 28, 'L'),
    (30, '_'): ('_', 40, 'L'),
    (30, '0'): ('x', 31, 'L'),
    (30, '1'): ('y', 35, 'L'),
    (31, '_'): ('_', 32, 'L'),
    (31, '@'): ('@', 31, 'L'),
    (31, '$'): ('$', 31, 'L'),
    (31, 'x'): ('x', 31, 'L'),
    (31, 'y'): ('y', 31, 'L'),
    (31, '0'): ('0', 31, 'L'),
    (31, '1'): ('1', 31, 'L'),
    (32, '_'): ('x', 33, 'R'),
    (32, '0'): ('x', 33, 'R'),
    (32, '1'): ('y', 33, 'R'),
    (32, '@'): ('@', 32, 'L'),
    (32, '$'): ('$', 32, 'L'),
    (32, 'x'): ('x', 32, 'L'),
    (32, 'y'): ('y', 32, 'L'),
    (33, '_'): ('_', 34, 'R'),
    (33, '@'): ('@', 33, 'R'),
    (33, '$'): ('$', 33, 'R'),
    (33, 'x'): ('x', 33, 'R'),
    (33, 'y'): ('y', 33, 'R'),
    (33, '0'): ('0', 33, 'R'),
    (33, '1'): ('1', 33, 'R'),
    (34, 'x'): ('x', 30, 'L'),
    (34, 'y'): ('y', 30, 'L'),
    (34, '_'): ('_', 34, 'R'),
    (34, '@'): ('@', 34, 'R'),
    (34, '$'): ('$', 34, 'R'),
    (34, '0'): ('0', 34, 'R'),
    (34, '1'): ('1', 34, 'R'),
    (35, '_'): ('_', 36, 'L'),
    (35, '@'): ('@', 35, 'L'),
    (35, '$'): ('$', 35, 'L'),
    (35, 'x'): ('x', 35, 'L'),
    (35, 'y'): ('y', 35, 'L'),
    (35, '0'): ('0', 35, 'L'),
    (35, '1'): ('1', 35, 'L'),
    (36, '_'): ('y', 33, 'R'),
    (36, '0'): ('y', 33, 'R'),
    (36, '1'): ('x', 37, 'L'),
    (36, '@'): ('@', 36, 'L'),
    (36, '$'): ('$', 36, 'L'),
    (36, 'x'): ('x', 36, 'L'),
    (36, 'y'): ('y', 36, 'L'),
    (37, '_'): ('1', 33, 'R'),
    (37, '0'): ('1', 33, 'R'),
    (37, '1'): ('0', 37, 'L'),
    (40, '_'): ('_', 41, 'R'),
    (40, '@'): ('@', 40, 'L'),
    (40, '$'): ('$', 40, 'L'),
    (40, 'x'): ('x', 40, 'L'),
    (40, 'y'): ('y', 40, 'L'),
    (40, '0'): ('0', 40, 'L'),
    (40, '1'): ('1', 40, 'L'),
    (41, '_'): ('_', 42, 'R'),
    (41, 'x'): ('0', 41, 'R'),
    (41, 'y'): ('1', 41, 'R'),
    (41, '@'): ('@', 41, 'R'),
    (41, '$'): ('$', 41, 'R'),
    (41, '0'): ('0', 41, 'R'),
    (41, '1'): ('1', 41, 'R'),
    (42, '_'): ('_', 43, 'R'),
    (42, 'x'): ('0', 42, 'R'),
    (42, 'y'): ('1', 42, 'R'),
    (42, '@'): ('@', 42, 'R'),
    (42, '$'): ('$', 42, 'R'),
    (42, '0'): ('0', 42, 'R'),
    (42, '1'): ('1', 42, 'R'),
    (43, '_'): ('_', 0, 'L'),
    (43, '@'): ('@', 43, 'R'),
    (43, '$'): ('$', 43, 'R'),
    (43, 'x'): ('x', 43, 'R'),
    (43, 'y'): ('y', 43, 'R'),
    (43, '0'): ('0', 43, 'R'),
    (43, '1'): ('1', 43, 'R')
}

# Initialize the tape and machine
tape = "10110_1010"
start_position = 9  # start_position
tm = TuringMachine_1(tape, start_position, transitions)

# Run the Turing Machine and print the resulting tape
result = tm.run()
print("Resulting Tape:", result)

